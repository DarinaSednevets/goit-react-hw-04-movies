{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/MoviesAPI.js","components/MoviesDetails/MoviesDetailsPage.module.scss","../node_modules/nanoid/index.browser.js","components/MoviesDetails/MoviesDetails.js","components/Cast/Cast.js","components/Reviews/Reviews.js","pages/MoviesDetailsPage.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","api","fetchMovies","fetch","then","res","json","fetchMoviesById","id","fetchMoviesCast","fetchMoviesReviews","fetchMoviesByName","keyWord","module","exports","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","MoviesDetails","movieId","useParams","useState","movie","setMovie","useEffect","MoviesAPI","className","s","container","img","src","poster_path","alt","content","title","original_title","score","vote_average","overview","genres","map","genre","Cast","cast","setCast","person","profile_path","width","Reviews","reviews","setReviews","results","review","author","MoviesDetailsPage","url","useRouteMatch","history","useHistory","location","useLocation","goBackPath","setGoBackPath","state","type","onClick","to","path"],"mappings":"iGAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,ECHM,SAASE,EAAeN,EAAKG,GAC1C,OCLa,SAAyBH,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKG,GACjD,GAAsB,qBAAXK,QAA4BA,OAAOC,YAAYC,OAAOV,GAAjE,CACA,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIQ,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETlB,GAAKQ,EAAKT,SAAWC,GAH8CS,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBX,EAAKG,IGJ3C,SAAqCoB,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIf,OAAOgB,UAAUC,SAASC,KAAKL,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoBpB,MAAM2B,KAAKT,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,GHF8D,CAA2BxB,EAAKG,IILjF,WACb,MAAM,IAAI+B,UAAU,6IJIgF,G,mEKHtG,IAmCMC,EAAM,CACRC,YApCgB,WAChB,OACIC,MAAM,4FACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAkCrBC,gBA9BoB,SAACC,GACrB,OACIL,MAAM,sCAAD,OAAuCK,EAAvC,6DACJJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WA4BrBG,gBAxBoB,SAACD,GACrB,OACIL,MAAM,sCAAD,OAAuCK,EAAvC,qEACJJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAsBrBI,mBAlBuB,SAACF,GACxB,OACIL,MAAM,sCAAD,OAAuCK,EAAvC,qEACJJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAgBrBK,kBAZsB,SAACC,GACvB,OACIT,MAAM,2GAAD,OAA4GS,EAA5G,gCACJR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,YAYVL,O,mBC5CfY,EAAOC,QAAU,CAAC,UAAY,qCAAqC,QAAU,mCAAmC,IAAM,+BAA+B,MAAQ,iCAAiC,MAAQ,mC,wECgCtM,IA2CIC,EAAS,WAKX,IAL0B,IAAdC,EAAc,uDAAP,GACfR,EAAK,GACLS,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAG3CA,KAAQ,CAMb,IAAIK,EAAqB,GAAdJ,EAAMD,GAGfR,GAFEa,EAAO,GAEHA,EAAK5B,SAAS,IACX4B,EAAO,IAETA,EAAO,IAAI5B,SAAS,IAAI6B,cACtBD,EAAO,GACV,IAEA,IAGV,OAAOb,G,gCC5DMe,MAhCf,WAEI,IACQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OAHAC,qBAAU,WACNC,IAAUvB,gBAAgBiB,GAASpB,KAAKwB,KACzC,CAACJ,IAEA,mCACKG,GACG,sBAAKI,UAAWC,IAAEC,UAAlB,UACI,qBAAKF,UAAWC,IAAEE,IAAKC,IAAG,UAZ1B,uCAY0B,OAAeR,EAAMS,aAAeC,IAAI,yBAClE,sBAAKN,UAAWC,IAAEM,QAAlB,UACI,oBAAIP,UAAWC,IAAEO,MAAjB,SAAyBZ,EAAMa,iBAC/B,8BAAG,sBAAMT,UAAWC,IAAES,MAAnB,yBAAH,UAAyE,GAArBd,EAAMe,aAA1D,QACA,0CACA,4BAAIf,EAAMgB,WACV,wCACA,4BAAIhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAI,sBAAqBf,UAAWC,IAAEc,MAAlC,SAA0CA,EAAMjD,MAArCkB,mBCJlDgC,MAtBf,YAA4B,IAAZvB,EAAW,EAAXA,QAGZ,EAAwBE,mBAAS,IAAjC,mBAAOsB,EAAP,KAAaC,EAAb,KAMA,OAJApB,qBAAU,WACNC,IAAUrB,gBAAgBe,GAASpB,MAAK,SAAAC,GAAG,OAAI4C,EAAQ5C,EAAI2C,WAC5D,CAACxB,IAGA,6BACEwB,GAAQA,EAAKH,KAAI,SAAAK,GAAM,OACrB,+BACI,qBAAKf,IAAG,UAXJ,uCAWI,OAAee,EAAOC,cAAgBd,IAAKa,EAAOrD,KAAMuD,MAAM,QACtE,4BAAIF,EAAOrD,SAFNqD,EAAO1C,UCOb6C,MAnBf,YAA+B,IAAZ7B,EAAW,EAAXA,QAEf,EAA8BE,mBAAS,IAAvC,mBAAO4B,EAAP,KAAgBC,EAAhB,KAMA,OAJA1B,qBAAU,WACNC,IAAUpB,mBAAmBc,GAASpB,MAAK,SAAAC,GAAG,OAAIkD,EAAWlD,EAAImD,cAClE,CAAChC,IAGA,6BACqB,IAAnB8B,EAAQtF,OAAesF,EAAQT,KAAI,SAAAY,GAAM,OACvC,+BAAwB,6BAAMA,EAAOC,SACjC,4BAAKD,EAAOnB,YADPmB,EAAOC,WAGf,4EC+BEC,UAzCf,WAEI,IAAQC,EAAQC,cAARD,IACApC,EAAYC,cAAZD,QAEFsC,EAAUC,cACVC,EAAWC,cAEjB,EAAoCvC,qBAApC,mBAAOwC,EAAP,KAAmBC,EAAnB,KAUA,OARAtC,qBAAU,WAAO,IAAD,EACZsC,EAAa,UAACH,EAASI,aAAV,aAAC,EAAgBtE,KAAKkE,YACpC,IAOC,qCACI,wBAAQK,KAAK,SAASC,QANV,WAChBR,EAAQ5E,KAAKgF,IAKT,qBACA,cAAC,EAAD,IACA,qBAAKnC,UAAU,OAAf,SACI,+BACI,6BAAmB,cAAC,IAAD,CAASwC,GAAE,UAAKX,EAAL,SAAX,mBAAV7C,KACT,6BAAmB,cAAC,IAAD,CAASwD,GAAE,UAAKX,EAAL,YAAX,sBAAV7C,UAIjB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyD,KAAI,UAAKZ,EAAL,SAAX,SACI,cAAC,EAAD,CAAMpC,QAASA,MAEnB,cAAC,IAAD,CAAOgD,KAAI,UAAKZ,EAAL,YAAX,SACI,cAAC,EAAD,CAASpC,QAASA","file":"static/js/4.628fb3d8.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\n\nconst fetchMovies = () => {\n    return (\n        fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=b0fe4eba3ecdaf3d666d8ecb887fbb5a`)\n        .then(res => res.json())\n    )\n}\n\nconst fetchMoviesById = (id) => {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=b0fe4eba3ecdaf3d666d8ecb887fbb5a&language=en-US`)\n        .then(res => res.json())\n    )\n}\n\nconst fetchMoviesCast = (id) => {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=b0fe4eba3ecdaf3d666d8ecb887fbb5a&language=en-US`)\n        .then(res => res.json())\n    )\n}\n\nconst fetchMoviesReviews = (id) => {\n    return (\n        fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=b0fe4eba3ecdaf3d666d8ecb887fbb5a&language=en-US`)\n        .then(res => res.json())\n    )\n}\n\nconst fetchMoviesByName = (keyWord) => {\n    return (\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=b0fe4eba3ecdaf3d666d8ecb887fbb5a&language=en-US&query=${keyWord}&page=1&include_adult=false`)\n        .then(res => res.json())\n    )\n}\n\nconst api = {\n    fetchMovies,\n    fetchMoviesById,\n    fetchMoviesCast,\n    fetchMoviesReviews,\n    fetchMoviesByName\n}\n\nexport default api;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviesDetailsPage_container__23mte\",\"content\":\"MoviesDetailsPage_content__IbWsM\",\"img\":\"MoviesDetailsPage_img__2aH7i\",\"genre\":\"MoviesDetailsPage_genre__3L_-r\",\"score\":\"MoviesDetailsPage_score__17S5U\"};","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you donâ€™t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you donâ€™t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MoviesAPI from '../../services/MoviesAPI';\nimport s from './MoviesDetailsPage.module.scss';\nimport { nanoid } from 'nanoid';\n\n\n\nfunction MoviesDetails() {\n\n    const imgPath = 'https://image.tmdb.org/t/p/original';\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n\n    useEffect(() => {\n        MoviesAPI.fetchMoviesById(movieId).then(setMovie)\n    }, [movieId])\n    return (\n        <>\n            {movie &&\n                <div className={s.container}>\n                    <img className={s.img} src={`${imgPath}${movie.poster_path}`} alt=\"movie.original_title\" />\n                    <div className={s.content}>\n                        <h1 className={s.title}>{movie.original_title}</h1>\n                        <p><span className={s.score}>User Score:</span>{`${(movie.vote_average * 10)}%`}</p>\n                        <h2>Overview</h2>\n                        <p>{movie.overview}</p>\n                        <h3>Genres</h3>\n                        <p>{movie.genres.map(genre => <span key={nanoid()} className={s.genre}>{genre.name}</span>)}</p>\n                    </div>\n                </div>\n            }\n\n\n        </>\n\n    )\n}\n\nexport default MoviesDetails;","import MoviesAPI from '../../services/MoviesAPI'\nimport { useEffect, useState } from 'react';\n\nfunction Cast({ movieId }) {\n\n    const imgPath = 'https://image.tmdb.org/t/p/original'\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        MoviesAPI.fetchMoviesCast(movieId).then(res => setCast(res.cast))\n    }, [movieId])\n\n    return (\n        <ul>\n        { cast && cast.map(person => (\n            <li key={person.id}>\n                <img src={`${imgPath}${person.profile_path}`} alt={person.name} width='150' />\n                <p>{person.name}</p>\n           </li>\n        ))}\n            \n        </ul>\n    )\n}\n\nexport default Cast;","import MoviesAPI from '../../services/MoviesAPI'\nimport { useEffect, useState } from 'react';\n\nfunction Reviews({ movieId }) {\n\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        MoviesAPI.fetchMoviesReviews(movieId).then(res => setReviews(res.results))\n    }, [movieId])\n\n    return (\n        <ul>\n        { reviews.length !== 0 ? reviews.map(review => (\n            <li key={review.author}><h3>{ review.author}</h3>\n                <p>{ review.content}</p>\n            </li>\n        )) : <p>We don't have any reviews for this movie</p>  }\n        </ul>\n    )\n}\n\nexport default Reviews;","import { useEffect, useState } from 'react';\nimport { NavLink, useRouteMatch, Route, useParams, Switch, useHistory, useLocation } from 'react-router-dom';\nimport { nanoid } from \"nanoid\";\nimport MoviesDetails from \"../components/MoviesDetails/MoviesDetails\";\nimport Cast from '../components/Cast/Cast';\nimport Reviews from '../components/Reviews/Reviews';\n\nfunction MoviesDetailsPage() {\n\n    const { url } = useRouteMatch();\n    const { movieId } = useParams();\n\n    const history = useHistory();\n    const location = useLocation();\n\n    const [goBackPath, setGoBackPath] = useState()\n\n    useEffect(() => {\n        setGoBackPath(location.state?.from.location)\n    }, []) //eslint-disable-line react-hooks/exhaustive-deps\n\n    const handleClick = () => {\n        history.push(goBackPath);\n    }\n\n    return (\n        <>\n            <button type='button' onClick={handleClick}>go back</button>\n            <MoviesDetails />\n            <div className='info'>\n                <ul>\n                    <li key={nanoid()}><NavLink to={`${url}/cast`}>Cast</NavLink></li>\n                    <li key={nanoid()}><NavLink to={`${url}/reviews`}>Reviews</NavLink></li>\n                </ul>\n            </div>\n\n            <Switch>\n                <Route path={`${url}/cast`}>\n                    <Cast movieId={movieId} />\n                </Route>\n                <Route path={`${url}/reviews`}>\n                    <Reviews movieId={movieId} />\n                </Route>\n            </Switch>\n        </>\n    )\n}\n\nexport default MoviesDetailsPage;"],"sourceRoot":""}